{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-189e9673\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"section-heading\"\n}, \"Open Tasks\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"task-list\"\n};\nconst _hoisted_3 = {\n  class: \"task-title\"\n};\nconst _hoisted_4 = {\n  class: \"task-details\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"section-heading\"\n}, \"Completed Tasks\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"task-list\"\n};\nconst _hoisted_8 = {\n  class: \"task-title\"\n};\nconst _hoisted_9 = {\n  class: \"task-details\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.openTasks, task => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: task.id\n    }, [_createElementVNode(\"span\", _hoisted_3, _toDisplayString(task.title), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_4, \"Created on \" + _toDisplayString($options.formatDate(task.createdAt)), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.completeTask(task.id),\n      class: \"complete-button\"\n    }, \"Complete\", 8 /* PROPS */, _hoisted_5)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_6, _createElementVNode(\"ul\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.completedTasks, task => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: task.id\n    }, [_createElementVNode(\"span\", _hoisted_8, _toDisplayString(task.title), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_9, \"Completed on \" + _toDisplayString($options.formatDate(task.completedAt)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_renderList","$options","openTasks","task","key","id","_hoisted_3","_toDisplayString","title","_hoisted_4","formatDate","createdAt","onClick","$event","completeTask","_hoisted_5","_hoisted_6","_hoisted_7","completedTasks","_hoisted_8","_hoisted_9","completedAt"],"sources":["C:\\Users\\ragha\\OneDrive\\Desktop\\aptcassign\\src\\components\\TaskList.vue"],"sourcesContent":["<template>\r\n  \r\n    <h2 class=\"section-heading\">Open Tasks</h2>\r\n    <ul class=\"task-list\">\r\n      <li v-for=\"task in openTasks\" :key=\"task.id\">\r\n        <span class=\"task-title\">{{ task.title }}</span>\r\n        <span class=\"task-details\">Created on {{ formatDate(task.createdAt) }}</span>\r\n        <button @click=\"completeTask(task.id)\" class=\"complete-button\">Complete</button>\r\n      </li>\r\n    </ul>\r\n\r\n    <h2 class=\"section-heading\">Completed Tasks</h2>\r\n    <ul class=\"task-list\">\r\n      <li v-for=\"task in completedTasks\" :key=\"task.id\">\r\n        <span class=\"task-title\">{{ task.title }}</span>\r\n        <span class=\"task-details\">Completed on {{ formatDate(task.completedAt) }}</span>\r\n      </li>\r\n    </ul>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: ['tasks'],\r\n  methods: {\r\n    formatDate(date) {\r\n      \r\n      return new Date(date).toLocaleString();\r\n    },\r\n    completeTask(id) {\r\n      this.$emit('completeTask', id);\r\n    }\r\n  },\r\n  computed: {\r\n    openTasks() {\r\n      return this.tasks.filter(task => !task.completed);\r\n    },\r\n    completedTasks() {\r\n      return this.tasks.filter(task => task.completed);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.section-heading {\r\n  font-size: 1.5em;\r\n  color: #333;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.task-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  background-color: #f4f4f4;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.task-title {\r\n  font-weight: bold;\r\n}\r\n\r\n.task-details {\r\n  color: #777;\r\n}\r\n\r\n.complete-button {\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";;gEAEIA,mBAAA,CAA2C;EAAvCC,KAAK,EAAC;AAAiB,GAAC,YAAU;;EAClCA,KAAK,EAAC;AAAW;;EAEXA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAc;mBANlC;gEAWID,mBAAA,CAAgD;EAA5CC,KAAK,EAAC;AAAiB,GAAC,iBAAe;;EACvCA,KAAK,EAAC;AAAW;;EAEXA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAc;;uBAflCC,mBAAA,CAAAC,SAAA,SAEIC,UAA2C,EAC3CJ,mBAAA,CAMK,MANLK,UAMK,I,kBALHH,mBAAA,CAIKC,SAAA,QARXG,WAAA,CAIyBC,QAAA,CAAAC,SAAS,EAAjBC,IAAI;yBAAfP,mBAAA,CAIK;MAJ0BQ,GAAG,EAAED,IAAI,CAACE;QACvCX,mBAAA,CAAgD,QAAhDY,UAAgD,EAAAC,gBAAA,CAApBJ,IAAI,CAACK,KAAK,kBACtCd,mBAAA,CAA6E,QAA7Ee,UAA6E,EAAlD,aAAW,GAAAF,gBAAA,CAAGN,QAAA,CAAAS,UAAU,CAACP,IAAI,CAACQ,SAAS,mBAClEjB,mBAAA,CAAgF;MAAvEkB,OAAK,EAAAC,MAAA,IAAEZ,QAAA,CAAAa,YAAY,CAACX,IAAI,CAACE,EAAE;MAAGV,KAAK,EAAC;OAAkB,UAAQ,iBAP/EoB,UAAA,E;oCAWIC,UAAgD,EAChDtB,mBAAA,CAKK,MALLuB,UAKK,I,kBAJHrB,mBAAA,CAGKC,SAAA,QAhBXG,WAAA,CAayBC,QAAA,CAAAiB,cAAc,EAAtBf,IAAI;yBAAfP,mBAAA,CAGK;MAH+BQ,GAAG,EAAED,IAAI,CAACE;QAC5CX,mBAAA,CAAgD,QAAhDyB,UAAgD,EAAAZ,gBAAA,CAApBJ,IAAI,CAACK,KAAK,kBACtCd,mBAAA,CAAiF,QAAjF0B,UAAiF,EAAtD,eAAa,GAAAb,gBAAA,CAAGN,QAAA,CAAAS,UAAU,CAACP,IAAI,CAACkB,WAAW,kB"},"metadata":{},"sourceType":"module","externalDependencies":[]}